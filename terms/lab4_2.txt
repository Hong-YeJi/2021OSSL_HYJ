# shell / login / logout
- shell은 명령어와 프로그램을 실행할 때 사용하는 인터페이스이다. 사용자로부터 명령을 받아 그것을 해석하고 프로그램을 실행하는 역할을 한다. 유닉스 계열의 운영체제는 보통 텍스트 모드의 터미널 화면에서 명령행에 명령어를 타이핑하여 사용한다. 이 명령어를 해석하는 프로그램이 shell이다. shell을 사용하는 것은 윈도우의 명령 프롬프트에서 명령을 실행하는 것과 유사하지만 리눅스의 쉘은 훨씬 강력한 기능을 제공한다. 
- 리눅스는 다중 사용자용 운영체제로서 로그인하여 리눅스 시스템을 사용하고, 로그아웃해서 시스템 사용을 종료한다. 로그아웃은 리눅스 시스템의 접근을 종료하는 것으로, 리눅스 시스템을 종료하는 것과는 다르다.
- 로그인은 ssh 계정이름@IP주소 입력 후, 비밀번호까지 입력하면 login 상태가 된다.
- 로그아웃 방법으로는 logout 입력, exit 입력, ctrl + d가 있다.
# username / password
- username과 password는 서버 접속 login을 할 때 필요한 정보들이다.
- 계정관리는 관리자 권한을 가진 계정으로 로그인해야 한다.
- useradd 또는 adduser 명령어로 계정을 생성할 수 있다.
- passwd는 기본적으로 패스워드를 부여하거나 패스워드를 변경하는 명령이지만, 계정을 사용하지 못하게 하거나, 패스워드 만기일 및 유효기간 등을 설정할 수 있다. 특정 사용자의 비밀번호를 변경할 때에는 passwd username을 입력하면 된다. 그러면 새로운 패스워드를 입력하라고 나오게 된다.
# prompt
- 컴퓨터가 입력을 받아들일 준비가 되어서 기다리고 있다고 알려주는 메시지이다.
- 리눅스 터미널에서 ~$ 또는 ~#처럼 뜨는 것이 프롬프트이다.
# directory / file / symbolic link / hard link
- directory는 윈도우에서의 폴더에 해당한다. 리눅스에서 파일을 효율적으로 관리하게 위해 디렉토리를 계층적으로 구성한다. 리눅스에서는 디렉토리도 파일로 취급하는데, 디렉토리 파일에는 해당 디렉토리에 저장된 파일이나 하위 디렉토리에 대한 정보가 저장된다.
- file은 데이터를 저장하는데 주로 사용된다. 각종 텍스트 파일, 실행파일, 이미지 파일 등 리눅스에서 사용하는 대부분의 파일을 의미한다.
- symbolic link는 원본 파일을 대신하도록 원본 파일을 다른 파일명으로 지정한 것으로 윈도우의 바로가기와 개념이 비슷하다. 원본 파일의 이름을 가리키는 링크로, 원본 파일이 사라지게 되면 역할을 수행할 수 없다. 장점은 전혀 다른 파일이라도 원본 파일과 이름이 같다면 계속 사용이 가능하다는 것이다.
- hard link는 원본 파일과 동일한 inode를 가진다. 그렇기 때문에, 원본 파일이 삭제 되더라도 원본 파일의 inode를 갖고 있는 링크 파일은 여전히 사용 가능하다. 즉, 원본 파일이 사라져도 원본과 동일한 내용의 파일을 가질 수 있다.
# root directory / home directory
- root directory는 컴퓨터 파일 시스템에서 계층 구조의 첫번째 또는 최상위 디렉토리이다. 
- home directory는 유저가 많은 것을 할 수 있는 유저의 공간으로, 가장 중요하고 기본이 되는 디렉토리이다. home 디렉토리 외의 다른 디렉토리들은 주로 system directory라고 한다.
# absolute path / relative path
- absolute path는 완전한 경로의 의미로, root directory부터 시작하는 경로를 뜻한다.
- 현재 나의 위치와 상관없이 절대 경로를 통해 해당 위치로 이동할 수 있다.
ex) cd /home/src/bin
- relative path는 현재 나의 위치를 기반으로 움직이는 경로이다. '.'은 현재 디렉토리를 뜻하고, '..' 는 현재 디렉토리의 상위 디렉토리를 뜻한다.
ex) cd ../../

